}
simulation(num_sims)
mean(p_val_1 < 0.05)
mean(p_val_1 < 0.1)
mean(p_val_2 < 0.05)
mean(p_val_2 < 0.1)
mean(p_val_1)
p_val<0.1
p_val_`<0.1
p_val_1<0.1
p_val_1<0.05
n = length(p_val_1)
sum(p_val_1 < 0.05)/n
sum(p_val_1 < 0.1)/n
sum(p_val_2 < 0.05)/n
sum(p_val_2 < 0.1)/n
sum(p_val_2<0.1)
count(p_val_2<0.1)
which(p_val_2<0.1)
which(p_val_1,0.01)
which(p_val_1<0.01)
p_val_1<0.01
p_val_1<0.05
p_val_1<0.1
p_val_2
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
print(p_val_1)
}
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
print(p_val_1)
}
simulation(num_sims)
str(x_1)
str(x_2)
str(y_1)
n = 50
set.seed(1)
x_1 = runif(n, 0, 10)
x_2 = runif(n, -5, 5)
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
fit_1 = lm(y_1 ~ x_1 + x_2)
qqnorm(resid(fit_1), col = "dodgerblue")
qqline(resid(fit_1), col = "darkorange", lwd = 2)
shapiro.test(resid(fit_1))
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_2 = lm(y_2 ~ x_1 + x_2)
qqnorm(resid(fit_2), col = "dodgerblue")
qqline(resid(fit_2), col = "darkorange", lwd = 2)
shapiro.test(resid(fit_2))
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
print(p_val_1)
}
simulation(num_sims)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
sum(p_val_1 < 0.05)/n
sum(p_val_1 < 0.1)/n
sum(p_val_2 < 0.05)/n
sum(p_val_2 < 0.1)/n
p_val_1<0.05
str(p_val_1)
str(p_val_2)
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
str(p_val_2)
p_val_1
str(p_val_2)
p_val_1
str(p_val_2)
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
str(p_val_1)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
str(p_val_1)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
p_val_1
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
p_val_1[i]
}
}
simulation(num_sims)
p_val_1
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
print(p_val_1[i])
}
}
simulation(num_sims)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
p_val_1
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
p_val_1
str(p_val_2)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
p_val_1 = as.numeric(p_val_1)
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
p_val_1 = as.numeric(p_val_1)
str(p_val_1)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
p_val_2[i] = shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
print(p_val_1)
sprintf("%.3f", p_val_1)
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
p_val_1[i] <- shapiro.test(resid(fit_1))$p.value
p_val_2[i] <- shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
p_val_1
max(p_val_1)
a = 1:1000
simulation<- function(num_sim=1000){
for(i in 1:num_sim){
y_1 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = 1)
y_2 = 2 + x_1 + 0 * x_2 + rnorm(n = n, mean = 0, sd = abs(x_2))
fit_1 = lm(y_1 ~x_1 + x_2)
fit_2 = lm(y_2 ~ x_1 + x_2)
a[i] <- shapiro.test(resid(fit_1))$p.value
p_val_2[i] <- shapiro.test(resid(fit_2))$p.value
}
}
simulation(num_sims)
max(a)
max(a)
a[4]
simulating = function(num_sim = 1000){
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
print(shapiro.test(resid(fit_1))$p.value)
}
}
simulating = function(num_sim = 1000){
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
print(shapiro.test(resid(fit_1))$p.value)
}
}
simulating(1000)
simulating = function(num_sim = 1000){
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
p_val_1[i] = shapiro.test(resid(fit_1))$p.value
}
}
simulating(1000)
max(p_val_1)
a[4]
max(p_val_1)
p_val_1[4]
max(p_val_1)
p_val_1[c(2,5)]
simulating = function(num_sim = 1000){
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
p_val_1[i] <- shapiro.test(resid(fit_1))$p.value
}
}
simulating(1000)
max(p_val_1)
p_val_1[c(2,5)]
simulating = function(num_sim = 1000){
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
p_val_1[i] <- shapiro.test(resid(fit_1))$p.value
}
}
simulating()
max(p_val_1)
p_val_1[c(2,5)]
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
}
pvals= simulating()
str(pvals)
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
print(pvals)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
return(pvals)
}
pvals= simulating()
str(pvals)
pvals= simulating()
mean(pvals[,1])
pvals= simulating()
mean(pvals[,1]<0.05)
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
#print(pvals)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_1~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
return(pvals)
}
pvals= simulating()
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
#print(pvals)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_2~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
return(pvals)
}
pvals= simulating()
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
pvals= simulating()
sum(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
pvals= simulating()
sum(pvals[,1]<0.05)/n
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
where(pvals[,1]<0.05)
sum(pvals[,1]<0.05)
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
num_sims = 1000
p_val_1 = rep(0, num_sims)
p_val_2 = rep(0, num_sims)
birthday = 19920502
set.seed(birthday)
p_val_1 = as.numeric(p_val_1)
str(p_val_1)
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
#print(pvals)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_2~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
return(pvals)
}
simulating(num_sims)
sum(pvals[,1]<0.05)
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
simulating = function(num_sim = 1000){
pvals=data.frame(fit1=1:num_sim, fit2=1:num_sim)
#print(pvals)
for(i in 1:num_sim){
y_1 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=1)
y_2 = 2+ x_1+ 0*x_2 +rnorm(n=n, mean=0, sd=abs(x_2))
fit_1 = lm(y_1~x_1+ x_2)
fit_2 = lm(y_2~x_1+ x_2)
pvals[i,1]= shapiro.test(resid(fit_1))$p.val
pvals[i,2]= shapiro.test(resid(fit_2))$p.val
}
return(pvals)
}
pvals = simulating(num_sims)
str(pvals)
sum(pvals[,1]<0.05)
mean(pvals[,1]<0.05)
mean(pvals[,1]<0.1)
mean(pvals[,2]<0.05)
mean(pvals[,2]<0.1)
str(pvals)
sum(pvals[,1]<0.05)
str(pvals)
pvals[,1]<0.05
sum(pvals[,1]<0.05)/num_sims
sum(pvals[,1]<0.1)/num_sims
sum(pvals[,2]<0.05)/num_sims
sum(pvals[,2]<0.1)/num_sims
swiss_re = swiss[-influential,]
sw_mod_lm = lm(Fertility~., data=swiss_re)
coef(sw_mod_lm)-coef(sw_lm)
new_data = swiss[influential,]
predict(sw_lm, newdata = new_data)-new_data$Fertility
predict(sw_mod_lm, newdata = new_data)-new_data$Fertility
influential = cooks.distance(conc_lm)>4/length(resid(conc_lm))
sum(influential)
conc_mod_lm = (strength~., data= concrete[-influential,])
conc_mod_lm = (strength~., data= concrete[-influential,])
conc_mod_lm = (strength~., data= concrete[-influential,])
concrete[-influential,]
conc_mod_lm = (strength~., data= )
concrete
concrete[-influential,]
conc_mod_lm = (strength~., data= )
str(concrete)
str(concrete[-influential,])
coef(conc_lm)-coef(conc_mod_lm)
str(influential)
coef(conc_lm)-coef(conc_mod_lm)
concrete[influential]
concrete[influential]
concrete[influential,]
#coef(conc_lm)-coef(conc_mod_lm)
concrete[-influential,]
#coef(conc_lm)-coef(conc_mod_lm)
concrete
concrete[-influential,]
#coef(conc_lm)-coef(conc_mod_lm)
influential = cooks.distance(conc_lm)>4/length(resid(conc_lm))
sum(influential)
concrete
concrete[-influential,]
#coef(conc_lm)-coef(conc_mod_lm)
sum(cooks.distance(conc_lm)>4/length(resid(conc_lm)))
concrete
concrete[cooks.distance(conc_lm)<=4/length(resid(conc_lm))]
concrete
concrete[cooks.distance(conc_lm)<=4/length(resid(conc_lm)),]
#coef(conc_lm)-coef(conc_mod_lm)
conc_mod_lm = lm(strength~., data= concrete[cooks.distance(conc_lm)<=4/length(resid(conc_lm)),])
coef(conc_lm)-coef(conc_mod_lm)
